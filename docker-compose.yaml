version: "3.8"

services:

  frontend:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: sh -c "python manage.py migrate"

  postgres:
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${USER} -d ${NAME}
      interval: 3s
      timeout: 5s
      retries: 10

volumes:
  db_data:
